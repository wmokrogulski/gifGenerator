# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Create release

on:
  pull_request:
    branches: [main]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout  
      uses: actions/checkout@v2  
      with:  
          fetch-depth: 0  
        
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipreqs pyinstaller flake8
        pipreqs
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with unittest
      run: |
        python -m unittest -v
        
    - name: Version
      id: version
      # You may pin to the exact commit or the version.
      # uses: juliansangillo/tag-version@0ca10cb901a4e3273715c4443e5dec5ad8f40328
      outputs:
        revision: 1.0.0
#       uses: juliansangillo/tag-version@v1.5
#       with:
#         # The branch to use for stable releases in production. Default is master
#         production-branch: main
#         # The branch to use for test deployments. Default is test
#         # test-branch: test# optional, default is test
#         # The branch to use for dev deployments. Default is develop
#         # dev-branch: develop# optional, default is develop
        
    - name: Build pyinstaller
      run: |
        python setup.py
        
    
        
    - name: Zip Release
      # You may pin to the exact commit or the version.
      # uses: TheDoctor0/zip-release@4fb9e4ff72847dd3d1c111cf63834e353ed7cb3d
      uses: TheDoctor0/zip-release@master
      with:
        # Filename for archive
        filename: release.zip # default is release.zip
        # Base path for archive files
        path: dist/ # optional, default is .
        # Working directory before zipping
        # directory: # optional, default is .
        

    - name: Install NSIS
      run: |
        sudo apt-get install nsis

    - name: Build NSIS installer
      run: |
        makensis /DPRODUCT_VERSION=${{ steps.version.outputs.revision }} setup.nsi
        
      
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.revision }}
        release_name: Release v${{  steps.version.outputs.revision }}

    - name: Upload assets
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release.zip
        asset_name: gifGeneratorv${{  steps.version.outputs.revision }}.zip
        
    - uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: setup.exe
        
        
    
